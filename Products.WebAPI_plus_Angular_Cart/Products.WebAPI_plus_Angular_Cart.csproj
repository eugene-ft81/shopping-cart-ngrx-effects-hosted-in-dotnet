<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
	  <!--start integration step #5-->
	  
	  <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
	  <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
	  <IsPackable>false</IsPackable>

	  <!-- the path picked up by all the processing -->
	  <SpaRoot>ClientApp\</SpaRoot>
	  
	  <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

	  <!-- Set this to true if you enable server-side prerendering -->
	  <BuildServerSideRenderer>false</BuildServerSideRenderer>

	  <!--start integration step #5-->	  
	  
	  <RootNamespace>_07252022_WebAPI</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.27" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
  </ItemGroup>

	<!--start integration step #6-->
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>
	<ItemGroup>
	  <ProjectReference Include="..\Products.Repository\Products.Repository.csproj" />
	</ItemGroup>

	<!-- Debug run configuration -->
	<!-- Check for Nodejs installation, install in the ClientApp -->
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>	

	<!-- Publish time tasks: run npm build along with project publish -->
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />

		<!--start the fix of integration step #6-->
		
		<!--discussion/aletrnative fixes: 
			https://github.com/angular/angular-cli/issues/23385
			https://github.com/ionic-team/ionic-cli/issues/4881
			https://github.com/just-jeb/angular-builders/issues/1223
			
			https://github.com/angular/universal/issues/2158
			https://stackoverflow.com/questions/49643536/the-command-npm-run-build-prod-exited-with-code-1-error	
		-->
		<!--1) fixed ng13->ng14 update issue with ng build' changed format:-->
		<!--before-->
		<!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod dashdash dashdashprod"/>-->
		<!--after-->
		<!--added package.json->scripts->"build:prod": "ng build dashdashconfiguration production",-->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod --" />
		
		<!--2) remaining ng build' changed format todo fixes:--> 
		<!--1)	fix package.json->scripts->"build:ssr": "ng run _07252022_WebApp_Angular:server:dev",-->
		<!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr dashdash dashdashprod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />-->

		<!--end the fix of integration step #6-->
		
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<!--end integration step #6-->
	
</Project>
